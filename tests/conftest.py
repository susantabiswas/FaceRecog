from face_recog.media_utils import load_image_path
import pytest
import cv2
import numpy as np


@pytest.fixture
def img1_data():
    img_loc = "data/sample/1.jpg"
    return load_image_path(img_path=img_loc, mode="rgb")


@pytest.fixture
def img2_data():
    img_loc = "data/sample/2.jpg"
    return load_image_path(img_path=img_loc, mode="rgb")


@pytest.fixture
def img2_encoding():
    return np.array(
        (
            -0.15869967639446259,
            0.17755424976348877,
            0.132210373878479,
            -0.0334048755466938,
            -0.08486375212669373,
            -0.006231691222637892,
            -0.014927119016647339,
            -0.07238829880952835,
            0.19186855852603912,
            -0.03464918211102486,
            0.3145632743835449,
            -0.0793544352054596,
            -0.1832607239484787,
            -0.07339420914649963,
            0.03500702604651451,
            0.1499107927083969,
            -0.16061539947986603,
            -0.06773205101490021,
            -0.051735058426856995,
            -0.04379011318087578,
            0.05761289596557617,
            0.0555725134909153,
            0.06493204832077026,
            0.010500037111341953,
            -0.14705941081047058,
            -0.4128572344779968,
            -0.05550049617886543,
            -0.14609992504119873,
            0.10279793292284012,
            -0.18064245581626892,
            -0.07899828255176544,
            -0.007798042614012957,
            -0.1593107283115387,
            -0.07907000184059143,
            0.0020275041460990906,
            0.06420491635799408,
            -0.07688793540000916,
            -0.14391057193279266,
            0.16423624753952026,
            -0.0485614575445652,
            -0.19071978330612183,
            0.025267599150538445,
            0.053469207137823105,
            0.260942667722702,
            0.20370817184448242,
            -0.08571188151836395,
            0.01616755686700344,
            -0.12812457978725433,
            0.14461927115917206,
            -0.19827800989151,
            0.10814668238162994,
            0.10198566317558289,
            0.09410250931978226,
            0.10044562816619873,
            0.1588328331708908,
            -0.09541905671358109,
            0.024255063384771347,
            0.10074599087238312,
            -0.23659691214561462,
            0.02772415801882744,
            0.11761961877346039,
            0.06183045357465744,
            -0.012251092121005058,
            -0.049877848476171494,
            0.1392619013786316,
            0.1593458652496338,
            -0.10828593373298645,
            -0.15629135072231293,
            0.03755293786525726,
            -0.09717176854610443,
            -0.022769054397940636,
            0.0801689624786377,
            -0.13679718971252441,
            -0.2007485032081604,
            -0.2982492744922638,
            0.041803017258644104,
            0.33517199754714966,
            0.094628244638443,
            -0.24456655979156494,
            -0.017750777304172516,
            -0.0457058809697628,
            -0.0658111646771431,
            0.10644231736660004,
            0.10950729995965958,
            -0.03611009940505028,
            -0.02529861405491829,
            -0.09121783822774887,
            0.07239089161157608,
            0.13691088557243347,
            -0.021150175482034683,
            -0.04359397292137146,
            0.2223713994026184,
            -0.0014852061867713928,
            -0.005543983541429043,
            0.026734042912721634,
            0.1381748616695404,
            -0.15806525945663452,
            0.011341789737343788,
            -0.11842670291662216,
            -0.013115869835019112,
            0.031007908284664154,
            -0.046655986458063126,
            -0.08235375583171844,
            0.1249907836318016,
            -0.217024028301239,
            0.20217978954315186,
            0.05427161231637001,
            0.011145682074129581,
            -0.0025518578477203846,
            -0.07601672410964966,
            -0.03037259727716446,
            0.0369185134768486,
            0.09364732354879379,
            -0.27081048488616943,
            0.20170797407627106,
            0.12471339851617813,
            0.010333037935197353,
            0.14167001843452454,
            0.00873187929391861,
            -0.018163304775953293,
            0.015410956926643848,
            -0.011543627828359604,
            -0.1414007991552353,
            -0.02152591571211815,
            0.0030600186437368393,
            -0.01775936409831047,
            -0.01822824776172638,
            0.019208597019314766,
        )
    )


@pytest.fixture
def img2_facial_data():
    return {
        "id": "374a46ca-9318-4b6f-a1b4-f61ee07f341e",
        "encoding": (
            -0.15869967639446259,
            0.17755424976348877,
            0.132210373878479,
            -0.0334048755466938,
            -0.08486375212669373,
            -0.006231691222637892,
            -0.014927119016647339,
            -0.07238829880952835,
            0.19186855852603912,
            -0.03464918211102486,
            0.3145632743835449,
            -0.0793544352054596,
            -0.1832607239484787,
            -0.07339420914649963,
            0.03500702604651451,
            0.1499107927083969,
            -0.16061539947986603,
            -0.06773205101490021,
            -0.051735058426856995,
            -0.04379011318087578,
            0.05761289596557617,
            0.0555725134909153,
            0.06493204832077026,
            0.010500037111341953,
            -0.14705941081047058,
            -0.4128572344779968,
            -0.05550049617886543,
            -0.14609992504119873,
            0.10279793292284012,
            -0.18064245581626892,
            -0.07899828255176544,
            -0.007798042614012957,
            -0.1593107283115387,
            -0.07907000184059143,
            0.0020275041460990906,
            0.06420491635799408,
            -0.07688793540000916,
            -0.14391057193279266,
            0.16423624753952026,
            -0.0485614575445652,
            -0.19071978330612183,
            0.025267599150538445,
            0.053469207137823105,
            0.260942667722702,
            0.20370817184448242,
            -0.08571188151836395,
            0.01616755686700344,
            -0.12812457978725433,
            0.14461927115917206,
            -0.19827800989151,
            0.10814668238162994,
            0.10198566317558289,
            0.09410250931978226,
            0.10044562816619873,
            0.1588328331708908,
            -0.09541905671358109,
            0.024255063384771347,
            0.10074599087238312,
            -0.23659691214561462,
            0.02772415801882744,
            0.11761961877346039,
            0.06183045357465744,
            -0.012251092121005058,
            -0.049877848476171494,
            0.1392619013786316,
            0.1593458652496338,
            -0.10828593373298645,
            -0.15629135072231293,
            0.03755293786525726,
            -0.09717176854610443,
            -0.022769054397940636,
            0.0801689624786377,
            -0.13679718971252441,
            -0.2007485032081604,
            -0.2982492744922638,
            0.041803017258644104,
            0.33517199754714966,
            0.094628244638443,
            -0.24456655979156494,
            -0.017750777304172516,
            -0.0457058809697628,
            -0.0658111646771431,
            0.10644231736660004,
            0.10950729995965958,
            -0.03611009940505028,
            -0.02529861405491829,
            -0.09121783822774887,
            0.07239089161157608,
            0.13691088557243347,
            -0.021150175482034683,
            -0.04359397292137146,
            0.2223713994026184,
            -0.0014852061867713928,
            -0.005543983541429043,
            0.026734042912721634,
            0.1381748616695404,
            -0.15806525945663452,
            0.011341789737343788,
            -0.11842670291662216,
            -0.013115869835019112,
            0.031007908284664154,
            -0.046655986458063126,
            -0.08235375583171844,
            0.1249907836318016,
            -0.217024028301239,
            0.20217978954315186,
            0.05427161231637001,
            0.011145682074129581,
            -0.0025518578477203846,
            -0.07601672410964966,
            -0.03037259727716446,
            0.0369185134768486,
            0.09364732354879379,
            -0.27081048488616943,
            0.20170797407627106,
            0.12471339851617813,
            0.010333037935197353,
            0.14167001843452454,
            0.00873187929391861,
            -0.018163304775953293,
            0.015410956926643848,
            -0.011543627828359604,
            -0.1414007991552353,
            -0.02152591571211815,
            0.0030600186437368393,
            -0.01775936409831047,
            -0.01822824776172638,
            0.019208597019314766,
        ),
        "name": "Test2",
    }


@pytest.fixture
def img2_keypoints():
    keypoints = [[139, 92], [125, 93], [91, 89], [105, 91], [114, 122]]

    return keypoints


@pytest.fixture
def img2_facebox_dlib_hog():
    return [[66, 66, 156, 157]]


@pytest.fixture
def img2_facebox_dlib_mmod():
    return [[70, 61, 152, 144]]


@pytest.fixture
def img2_facebox_opencv():
    # With dlib style fore head cropping
    return [[74, 72, 153, 160]]


@pytest.fixture
def img2_facebox_mtcnn():
    # With dlib style fore head cropping
    return [[76, 60, 151, 155]]


@pytest.fixture
def face_data1():
    data1 = {"name": "test1", "encoding": (-3.4, 0.3, -0.823, 1)}
    return data1


@pytest.fixture
def face_data2():
    data2 = {"name": "test2", "encoding": (-3.4, 0.3, -0.823, 1)}
    return data2


@pytest.fixture  # Normally pytest parametrize should be used for this
# scenario, but it was giving a weird parsing error on windows at the time
# of dev, so i skipped
def correct_cache_init_data():
    return [[], [{}], [{"name": "test2", "encoding": (-3.4, 0.3, -0.823, 1)}]]


@pytest.fixture
def incorrect_cache_init_data():
    return [[()], {}]


@pytest.fixture
def simple_cache_init_data():
    return [
        {"name": "test1", "encoding": (-3.4, 0.3, -0.823, 1)},
        {"name": "test2", "encoding": (-3.4, 0.3, -0.823, 1)},
    ]


@pytest.fixture
def simple_cache_data2():
    return {"name": "test2", "encoding": (-3.4, 0.3, -0.823, 1)}


@pytest.fixture
def simple_cache_data3():
    return {"name": "test3", "encoding": (-3.4, 0.3, -0.823, 1)}
